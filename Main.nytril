using Format, Units, IO;

// EvidenceFolder = Folders.Source Folders.Up Folder("Lawsuit");
EvidenceFolder = "C:\\Users\\Gunnar\\Google Drive Streaming\\My Drive\\1703 Johnson Way\\Legal, Neighbors\\South Property Line\\2020 Trash Removal\\Shared Folder - Ristroph Stormwater\\";

class EvidenceFileClass {
  var Path,
      Comment;

  Constructor(path, comment) {
    Path    = path;
    Comment = comment;
  }
}


EvidenceFileClass[] EvidenceFiles = [
  new("2020 03 30 video of trash coming out, pictures of flow\\2020 03 30 video of trash coming out - frame at 1m16s.jpg","Caution tape in storm water outflow."),
  new("2020 03 30 video of trash coming out, pictures of flow\\2020 03 30 video of trash coming out - frame at 1m20s.jpg","Caution tape in storm water outflow."),
  new("2020 03 30 video of trash coming out, pictures of flow\\2020 03 30 video of trash coming out - frame at 1m37s.jpg","Caution tape in storm water outflow."),
  new("2022 05 23 trash on grate at Murphy\\2022 05 23 trash on grate at Murphy Express.jpg","Moon Valley Nurseries tag on a storm inlet on Murphy property."),
  new("2022 05 23 trash on grate at Murphy\\2022 05 23 trash on grate at Murphy Express - crop.jpg","Moon Valley Nurseries tag on a storm inlet on Murphy property (cropped)."),
  new("2022 09 01 pictures of trash\\IMG_6129.HEIC","Moon Valley Nurseries tag."),
  new("2022 09 11 pictures of trash\\IMG_6974.HEIC","Moon Valley Nurseries tag."),
  new("2022 11 08 pictures and video of trash\\IMG_6660.HEIC","Moon Valley Nurseries tag."),
  new("2022 11 13 pictures of trash\\IMG_6829.HEIC","Moon Valley Nurseries tag."),
  new("2022 05 25 to 2022 07 01 time lapse\\2022 05 25 to 2022 07 02 time lapse 06 03.jpg","Storm drain outlet before rain."),
  new("2022 05 25 to 2022 07 01 time lapse\\2022 05 25 to 2022 07 02 time lapse 06 04.jpg","Storm drain outlet after rain, with face mask."),
  new("2022 05 25 to 2022 07 01 time lapse\\2022 05 25 to 2022 07 02 time lapse 06 29.jpg","Storm drain outlet after rain, with face mask."),
  new("2022 07 02 pictures of trash\\IMG_5189.HEIC","Face mask."),
  new("2022 07 02 pictures of trash\\IMG_5202.HEIC","Different face mask and other trash."),
  new("2022 05 24 to 2022 05 25 before and after, overnight time lapse\\TLC00001 - frame at 0m23s.jpg","Storm drain outlet before rain."),
  new("2022 05 24 to 2022 05 25 before and after, overnight time lapse\\TLC00001 - frame at 0m37s.jpg","Storm drain outlet after rain, with aluminum foil."),
  new("2022 05 24 to 2022 05 25 before and after, overnight time lapse\\IMG_4913 - frame at 0m19s.jpg","Aluminum foil."),
  new("2022 07 02 pictures of trash\\IMG_5195.HEIC","Aluminum foil."),
  new("2022 07 05 Carlos trash pick up\\2022 07 05 workers picking up trash - frame at 0m44s.jpg","Aluminum foil in trash bag.")
];

Main.Documents.MyDocument = new MyDocumentClass;



//==================================================================

class ExhibitClass {
  var        ShortFileName; // the name of the file including the folder, but without the full parent directory name
  var        Description; // comment
  var        Number;
  ImageClass Image;  // the actual image

  Constructor(shortfilename, ImageClass image, description, number) {
    ShortFileName = shortfilename;
    Image    = image;
    Description = description;
    Number = number;
  }

  Show = Paragraph {
    PageBreakBefore: true;
    DocFields.Anchor(Number);

    SpaceAfter: 10 pts;
    ParAlignment: ParAlignments.Center;
    VBox {
      HAlign: HAligns.Center;

      Paragraph {
        TextHeight: 14 pts;
        "Exhibit " Number;
      };

      Paragraph {
        "File name: " ShortFileName;
      };

      if (Image.Taken != #1-1-1 0:0:0#)  // #1-1-1 0:0:0#
      Paragraph {
        "Time (from meta data): " Image.Taken;
      };

      Paragraph {
        "Description: " Description;
      };

      HBox(null, null, null) {
        Image.FitSize(new SizeClass(6 inches, 6 inches));
      };
    }
  };
}

//==================================================================

class MyDocumentClass: DocumentClass {
  ListClass<ExhibitClass> Exhibits;

  Constructor {
    super.Constructor(#586455c1-7c7e-42ef-a73e-da9548a0058a#, "Exhibit-Maker");

    Exhibits = new(1024);
    var num = 101;
    foreach (var l in EvidenceFiles)
      AddPicture(l.Path,l.Comment,num++);
  }

  void AddPicture(filename, description, number) {
    switch (ToLower(GetFileExtension(filename))) {
      case "heic";
      case "jpg";
        var image = Read(EvidenceFolder FileName(filename));
        if (image is valid)
          Exhibits.Add(new(filename, image, description, number));
        break;
    }
  }

  TableOfContents = Section {
    SectionBreak: SectionBreaks.NextPage;
    Paragraph {
      ParAlignment: ParAlignments.Center;
      TextHeight: 20 pts;
      "Exhibits";
    };
    foreach (var exhibit in Exhibits) {
      Paragraph(null, [32 pts]) {
        exhibit.Number;
        Tab;
        Span {
          Action: new ActionClass(Actions.ToAnchor, exhibit.Number);
          exhibit.Description;
        };
      }
    }
  };

  override GetDocument = Document {
    TableOfContents;
    AddExhibits;
  };

  AddExhibits = Section {
    SectionBreak: SectionBreaks.NextPage;
    foreach (var exhibit in Exhibits)
      exhibit.Show;
  };
}

//==================================================================
